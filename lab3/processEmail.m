function word_indices = processEmail(email_contents)
% PROCESSEMAIL осуществляет предобработку электронного письма
% и возвращает список индексов слов (word_indices) 
%

% Загрузка словаря
vocabList = getVocabList();

% Инициализация возвращаемой переменной
word_indices = [];

% ================== Предобработка электронного письма ====================

% Нажождение и удаление заголовков
% Следует раскомментировать следующие строки кода, если в процессе обработки
% находятся "сырые письма" с полными заголовками

% hdrstart = strfind(email_contents, ([char(10) char(10)]));
% email_contents = email_contents(hdrstart(1):end);

% Понижение регистра
email_contents = lower(email_contents);

% Удаление всех HTML тэгов
% Просматриваются выражения, которые начинаются с символа < и заканчиваются символом >,
% после чего остается лишь текст письма

email_contents = regexprep(email_contents, '<[^<>]+>', ' ');

% Обработка числовых данных
% Просматриваются одна выражения, содержащие цифры от 0 до 9
email_contents = regexprep(email_contents, '[0-9]+', 'number');

% Обработка URL-адресов
% Обрабатываются выражения, содержащие  http:// или https://
email_contents = regexprep(email_contents, ...
                           '(http|https)://[^\s]*', 'httpaddr');

% Производится обработка Email адресов
% Просматриваются тестовые данные, содержащие @ в середине
email_contents = regexprep(email_contents, '[^\s]+@[^\s]+', 'emailaddr');

% Обрабатываются знаки $
email_contents = regexprep(email_contents, '[$]+', 'dollar');


% ========================== Токенизация текста письма ===========================
% Токенизация текста (tokenization - графематический анализ, 
% lexical analysis - лексический анализ) - выделение в тексте слов, чисел и другие токенов. 
% Например, нахождение границ предложений. 


fprintf('\n==== Обрабатываемое письмо ====\n\n');

l = 0;

while ~isempty(email_contents)

    [str, email_contents] = ...
       strtok(email_contents, ...
              [' @$/#.-:&*+=[]?!(){},''">_<;%' char(10) char(13)]);
   
    % Удаление всех не альфанумерических последовательностей
    str = regexprep(str, '[^a-zA-Z0-9]', '');

    % Применение процедуры "стемминга". Стемминг это процесс нахождения основы слова 
    % для заданного исходного слова. 
    % Здесь используется стеммер Портера — алгоритм стемминга, опубликованный Мартином Портером в 1980 году.
    try str = porterStemmer(strtrim(str)); 
    catch str = ''; continue;
    end;

    % Не обрабатывать слишком короткие слова
    if length(str) < 1
       continue;
    end

    % ====================== Ваш код здесь ======================
    % Указание:     Требуется запрограммировать функцию, добавляющую индекс
    %               str в переменную word_indices, если слово обнаруживается в словаре.
    %               Простой стеммер ищет флективную форму в таблице поиска. 
    %               Таблица поиска (англ. lookup table) — это структура данных, 
    %               обычно массив или ассоциативный массив, используемая с целью 
    %               заменить вычисления на операцию простого поиска.         
    %               Следует определить присутствие str в словаре vocabList. 
    %               Если существует соответствие, следует добавить индекс 
    %               слова в вектор индексов.
    %               Например, если str = 'action', тогда следует обнаружить это 
    %               слово в vocabList и если, например, в vocabList{18} =
    %               'action', тогда следует добавить 18 к вектору word_indices 
    %               (word_indices = [word_indices ; 18]; ).
    % 
    % Указание:  Функция vocabList{idx} возвращает с слово с индексом idx в словаре.
    % 
    % Замечание: Можно использовать функцию  strcmp(str1, str2) для
    % сравнения двух строк(str1 и str2). Значение 1 будет получено лишь в 
    % случае эквивалентности двух последовательностей символов.
    %
    
    
    for i=1:length(vocabList)
        if strcmp(vocabList{i},str) == 1
            word_indices = [word_indices ; i];
            break
        end
    end
    
    
end
fprintf('\n\n=========================\n');

end
