%% ============= Часть 4: "K-means" кластеризация элементов изображения ===============
%  Терминология: пиксел (англ. pixel = picture element) обозначает элемент
%  изображения ("элиз")
%  В данном упражнении, следует применить процедуру кластеризации методом k-средних
%  для сжатия изображения. Для того, чтобы сделать это, "k-means" кластеризация 
%  производится в цветовом пространстве исходного изображения, а затем производится отображение 
%  на ближайшие центроиды в трансформированном цветовом пространстве.
%  
%  Требуется подготовить код функции kMeansInitCentroids.m
%

fprintf('\nВыполнение процедуры кластеризации методом k-средних на изображении.\n\n');

%  Загрузка изображения птицы
original = imread('bird_small.png');
A = rgb2gray(imread('bird_small.png'));

% Если загрузка не производится, можно воспользоваться процедурой
%   load ('bird_small.mat');

A = double(A) / 255; 
% Осуществляется деление на 255 с целью нормировки всех данных в диапазоне от 0 до 1

% Размер изображения
img_size = size(A);

% Переопределение RGB изображения в матрицу Nx3, где N = количество элизов.
% Таким образом, каждая строка содержит сейчас значения компонент красного, зеленого и синего цветов
% В результате таких трансформаций, образована матрица X, которая будет использована в k-means.
X = reshape(A, img_size(1) * img_size(2), 1);

% приступить к исполнению алгоритма кластеризации k-means на полученных данных
% Следует использовать различные значени K и max_iters
K = 3; 
max_iters = 10;

% При  моделировании следует производить случайную начальную инициализацию центроидов. 
% Необходимо запрограммировать kMeansInitCentroids.m перед обработкой
initial_centroids = kMeansInitCentroids(X, K);

% Моделирование алгоритма
[centroids, idx] = runkMeans(X, initial_centroids, max_iters);



%% ================= Часть 5: Сжатие изображения ======================
%  В этой части лабораторной работы Вы будете использовать 
%  метод кластеризации k-средних для сжатия изображения. 


% Нахождение ближайших значений в кластере
idx = findClosestCentroids(X, centroids);

% Представление изображения X в терминах индексов в idx. 

% Восстановление изображения производится посредством отображения каждой точки изображения 
% (заданной посредством индексов в idx) на значения центроидов
X_recovered = centroids(idx,:);

% Преобразование формата изображения
X_recovered = reshape(X_recovered, img_size(1), img_size(2), 1);
figure;
% Отображение исходного изображения 
subplot(1, 2, 1);
imshow(original); 
title('Оригинал');

% Отображение сжатого изображения
subplot(1, 2, 2);
imshow(X_recovered)
title(sprintf('Сжатое с %d цветами', K));

